// 4.15.0 0x87782c5f
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_blue_buttons_round_edge_icon_button[]; // BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID = 0, Size: 60x60 pixels
extern const unsigned char image_blue_buttons_round_edge_icon_button_pressed[]; // BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID = 1, Size: 60x60 pixels
extern const unsigned char image_bomb[]; // BITMAP_BOMB_ID = 2, Size: 25x25 pixels
extern const unsigned char image_eight[]; // BITMAP_EIGHT_ID = 3, Size: 25x25 pixels
extern const unsigned char image_five[]; // BITMAP_FIVE_ID = 4, Size: 25x25 pixels
extern const unsigned char image_four[]; // BITMAP_FOUR_ID = 5, Size: 25x25 pixels
extern const unsigned char image_one[]; // BITMAP_ONE_ID = 6, Size: 25x25 pixels
extern const unsigned char image_seven[]; // BITMAP_SEVEN_ID = 7, Size: 25x25 pixels
extern const unsigned char image_six[]; // BITMAP_SIX_ID = 8, Size: 25x25 pixels
extern const unsigned char image_ten[]; // BITMAP_TEN_ID = 9, Size: 25x25 pixels
extern const unsigned char image_three[]; // BITMAP_THREE_ID = 10, Size: 25x25 pixels
extern const unsigned char image_two[]; // BITMAP_TWO_ID = 11, Size: 25x25 pixels
extern const unsigned char image_wall[]; // BITMAP_WALL_ID = 12, Size: 75x75 pixels
extern const unsigned char image_white[]; // BITMAP_WHITE_ID = 13, Size: 1200x600 pixels
extern const unsigned char image_zero[]; // BITMAP_ZERO_ID = 14, Size: 25x25 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { image_blue_buttons_round_edge_icon_button, 0, 60, 60, 7, 6, 46, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 46, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_blue_buttons_round_edge_icon_button_pressed, 0, 60, 60, 7, 6, 46, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 46, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_bomb, 0, 25, 25, 0, 0, 25, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 25, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_eight, 0, 25, 25, 0, 0, 25, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 25, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_five, 0, 25, 25, 0, 0, 25, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 25, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_four, 0, 25, 25, 0, 0, 25, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 25, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_one, 0, 25, 25, 0, 0, 25, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 25, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_seven, 0, 25, 25, 0, 0, 25, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 25, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_six, 0, 25, 25, 0, 0, 25, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 25, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_ten, 0, 25, 25, 0, 0, 25, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 25, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_three, 0, 25, 25, 0, 0, 25, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 25, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_two, 0, 25, 25, 0, 0, 25, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 25, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_wall, 0, 75, 75, 0, 0, 75, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 75, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_white, 0, 1200, 600, 0, 0, 1200, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 600, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 },
    { image_zero, 0, 25, 25, 0, 0, 25, (uint8_t)(touchgfx::Bitmap::RGB565) >> 3, 25, (uint8_t)(touchgfx::Bitmap::RGB565) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}
